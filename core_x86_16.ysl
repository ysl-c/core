func putch ch
	param ch

	addr ch
	asm mov si, ax
	asm mov bx, [si]
	asm mov ah, 0x0E
	asm mov al, bl
	asm int 0x10
endfunc

func exit
	asm mov ah, 0x4C
	asm int 0x21
endfunc

func add n1 n2
	param n1
	param n2

	addr n2
	asm mov si, ax
	asm mov bx, [si]
	addr n1
	asm mov si, ax
	asm mov ax, [si]
	asm add ax, bx
endfunc

func sub n1 n2
	param n1
	param n2

	addr n2
	asm mov si, ax
	asm mov bx, [si]
	addr n1
	asm mov si, ax
	asm mov ax, [si]
	asm sub ax, bx
endfunc

func mul n1 n2
	param n1
	param n2

	addr n2
	asm mov si, ax
	asm mov bx, [si]
	addr n1
	asm mov si, ax
	asm mov ax, [si]
	asm mul bx
endfunc

func div n1 n2
	param n1
	param n2

	addr n2
	asm mov si, ax
	asm mov bx, [si]
	addr n1
	asm mov si, ax
	asm mov ax, [si]
	asm xor dx, dx
	asm div bx
	asm ret
endfunc

func mod n1 n2
	param n1
	param n2

	addr n2
	asm mov si, ax
	asm mov bx, [si]
	addr n1
	asm mov si, ax
	asm mov ax, [si]
	asm xor dx, dx
	asm div bx
	asm mov ax, dx
endfunc

func equals n1 n2
	param n1
	param n2

	addr n2
	asm mov si, ax
	asm mov bx, [si]
	addr n1
	asm mov si, ax
	asm mov ax, [si]
	asm cmp ax, bx
	asm je .equals
	asm mov ax, 0
	asm ret
	asm .equals:
	asm mov ax, 1
endfunc

func less n1 n2
	param n1
	param n2

	addr n2
	asm mov si, ax
	asm mov bx, [si]
	addr n1
	asm mov si, ax
	asm mov ax, [si]
	asm cmp ax, bx
	asm jl .less
	asm mov ax, 0
	asm ret
	asm .less:
	asm mov ax, 1
endfunc

func greater n1 n2
	param n1
	param n2

	addr n2
	asm mov si, ax
	asm mov bx, [si]
	addr n1
	asm mov si, ax
	asm mov ax, [si]
	asm cmp ax, bx
	asm jg .greater
	asm mov ax, 0
	asm ret
	asm .greater:
	asm mov ax, 1
endfunc

func peek8 address
	param address

	addr address
	asm mov si, ax
	asm mov di, [si]
	asm mov al, [di]
	asm xor ah, ah
endfunc

func poke8 address value
	param address
	param value

	addr address
	asm mov si, ax
	asm mov di, [si]
	addr value
	asm mov si, ax
	asm mov al, [si]
	asm mov [di], al
endfunc

func peek16 address
	param address

	addr address
	asm mov si, ax
	asm mov di, [si]
	asm mov si, [di]
	asm mov ax, si
endfunc

func poke16 address value
	param address
	param value

	addr address
	asm mov si, ax
	asm mov di, [si]
	addr value
	asm mov si, ax
	asm mov bx, [si]
	asm mov [di], bx
endfunc

func peek16far segment address
	param segment
	param address

	addr address
	asm mov di, ax
	asm mov si, [di]
	addr segment
	asm mov di, ax
	asm mov si, [di]
	asm mov es, si
	asm mov ax, [es:si]
endfunc

func poke16far segment address value
	param segment
	param address
	param value

	addr address
	asm mov di, ax
	asm mov si, [di]
	addr segment
	asm mov di, ax
	asm mov si, [di]
	asm mov es, si
	addr value
	asm mov di, ax
	asm mov ax, [di]
	asm mov [es:si], ax
endfunc

func getch
	asm xor ah, ah
	asm int 0x16
	asm xor ah, ah
endfunc

func byte_and v1 v2
	param v1
	param v2

	addr v1
	asm mov si, ax
	asm mov bx, [si]
	addr v2
	asm mov si, ax
	asm mov ax, [si]
	asm xor ah, ah
	asm and al, bl
endfunc

func byte_xor v1 v2
	param v1
	param v2

	addr v1
	asm mov si, ax
	asm mov bx, [si]
	addr v2
	asm mov si, ax
	asm mov ax, [si]
	asm xor ah, ah
	asm xor al, bl
endfunc

func byte_or v1 v2
	param v1
	param v2

	addr v1
	asm mov si, ax
	asm mov bx, [si]
	addr v2
	asm mov si, ax
	asm mov ax, [si]
	asm xor ah, ah
	asm or al, bl
endfunc

func byte_not v
	param v

	addr v
	asm mov si, ax
	asm mov ax, [si]
	asm xor ah, ah
	asm not al
endfunc

func word_and v1 v2
	param v1
	param v2

	addr v1
	asm mov si, ax
	asm mov bx, [si]
	addr v2
	asm mov si, ax
	asm mov ax, [si]
	asm and ax, bx
endfunc

func word_xor v1 v2
	param v1
	param v2

	addr v1
	asm mov si, ax
	asm mov bx, [si]
	addr v2
	asm mov si, ax
	asm mov ax, [si]
	asm xor ax, bx
endfunc

func word_or v1 v2
	param v1
	param v2

	addr v1
	asm mov si, ax
	asm mov bx, [si]
	addr v2
	asm mov si, ax
	asm mov ax, [si]
	asm or ax, bx
endfunc

func word_not v
	param v

	addr v
	asm mov si, ax
	asm mov ax, [si]
	asm not ax
endfunc
